//Model

var Blog = Backbone.Model.extend({
    default: {
        author: '',
        title: '',
        url: ''
    },
    initialize: function() {
       //this.bindEvents();
    },
    validate: function(attributes) {
    	var i=0,errors=[];
        if (attributes.author == "") {
          
        	errors.push({'attribute':attributes.author,'error':'Please Enter author name'});
            i++;

        }
        if (attributes.title == "") {
            	errors.push({'attribute':attributes.title,'error':'Please Enter title'});
            i++;

        }
        if (attributes.url == "") {
            	errors.push({'attribute':attributes.url,'error':'Please Enter url'});
            i++;

        }

         if(i > 0) return errors;
    },
    bindEvents: function() {

        this.on('invalid', function(model, error) {

            console.log(model)
        });

    }

});
//Collection

var Blogs = Backbone.Collection.extend({});

var blog1 = new Blog({
    author: 'Suvra',
    title: 'Learning Backbone',
    url: 'http://backbonejs.org'
});
var blog2 = new Blog({
    author: 'Suvra',
    title: 'Learning Vue',
    url: 'https://vuejs.org/'
});

var blogs = new Blogs([blog1, blog2]);

//View

var BlogView = Backbone.View.extend({
    model: new Blog,
    tagName: 'tr',
    initialize: function() {

        this.template = _.template($('.blog-each-template').html());
    },
    render: function() {

        this.$el.html(this.template(this.model.toJSON()));
        return this;
    },
    events:{
    	'click .edit-blog':'editBlog',
    	'click .cancel-update-blog':'cancelEditBlog',
    	'click .update-blog':'saveEditBlog',
    	'click .delete-blog':'deleteBlog',
    	
    },
    editBlog:function(){

    	$(".update-blog").removeClass('hidden');
    	$(".cancel-update-blog").removeClass('hidden')
    	$(".edit-blog").addClass('hidden')
    	$(".delete-blog").addClass('hidden');
		var author=this.$('.author').html();
		var title=this.$('.title').html();
		var url=this.$('.url').html();
        this.$('.author').html('<input autocomplete="off" type="text" name="author-update" class="form-control" value="'+author+'"/>');
 		this.$('.title').html('<input autocomplete="off" type="text" name="title-update" class="form-control" value="'+title+'"/>');
 		this.$('.url').html('<input autocomplete="off" type="text" name="url-update" class="form-control" value="'+url+'"/>');

    },
    saveEditBlog:function(){
    	this.model.set('author',$('input[name="author-update"]').val())
    	this.model.set('title',$('input[name="title-update"]').val())
    	this.model.set('url',$('input[name="url-update"]').val())

    },
	cancelEditBlog: function(){
       this.render();
	
	},
	deleteBlog:function(){
		this.model.destroy();
        this.render();
	}



});


var BlogsView = Backbone.View.extend({
    model: new Blog,
    el: $(".blog-list"),
    initialize: function() {
        var self = this;
        this.model.on('add', this.render, this);
        this.model.on('change', this.render, this);
        this.model.on('remove', this.render, this);
		self.render();
    	
    },
    render: function() {
        var self = this;
        this.$el.html('');
        console.log(this.model)
        // _.each(this.model.toArray(), function(blog) {
        //     self.$el.append((new BlogView({ model: blog })).render().$el);

        // });
        return this;
    }

});



$(function() {

    $(document).on('click', '.add-blog', function() {
 
        var newblog = new Blog({
            author: $('input[name="author"]').val(),
            title: $('input[name="title"]').val(),
            url: $('input[name="url"]').val(),
        });
        if (newblog.isValid()) {
            blogs.push(newblog.toJSON());
            $('input[name="author"]').val('')
            $('input[name="title"]').val('')
            $('input[name="url"]').val('')

        } else {

            //console.log("Not Valid");
// newblog.on('invalid', function(model,error){
//   				console.log(error.length); // printing the error message on 
// 			});
           
        }


    });

});
